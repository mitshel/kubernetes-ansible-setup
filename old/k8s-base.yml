---
- hosts: all
  remote_user: root
  tasks:
  - name: Creates destination directory for ssh keys
    # Workaround for #2372
    file: state=directory mode=0700 dest=/root/.ssh/
      
  - name: Pushes current user rsa key to k8s nodes
    # action: authorized_key user=root key='$FILE(~/.ssh/id_rsa.pub)'
    # Workaround for #2372
    copy: src=~/.ssh/id_rsa.pub dest=/root/.ssh/authorized_keys owner=root mode=0600
    ignore_errors: yes

  - name: Copy static files
    copy:
      src: ./sysctl.d/k8s.conf
      dest: /etc/sysctl.d/k8s.conf

  - name: Copy /etc/hosts
    copy:
      src: ./etc/hosts
      dest: /etc/hosts

  - name: Disable SELINEX
    lineinfile:
      dest: /etc/selinux/config
      regexp: '^SELINUX='
      line: 'SELINUX=disabled'
      state: present

  - name: Stop and Disable Firewalld
    systemd:
      state: stopped
      enabled: no
      name: firewalld

  - name: Yum update
    yum:
      name: '*'
      state: latest

  - name: Yum install package epel-release
    yum:
      name: epel-release
      state: latest

  - name: Yum install packages curl git bridge-utils nfs-utils
    yum: 
      name={{item}} 
      state=latest
    with_items:
      - curl
      - git
      - bridge-utils
      - nfs-utils
      - python-pip

  - name: PIP install pexpect
    pip:
      name: pexpect
      state: latest

  - name: Creating pub SSH keys
    expect: 
      command: ssh-keygen -N '' -f /root/.ssh/id_rsa
      responses:
        'Overwrite \(y/n\)\? ': 'n'
    ignore_errors: yes

  - name: Get id_rsa.pub from remote
    fetch: 
      src: '/root/.ssh/id_rsa.pub'
      dest: './public_keys/{{inventory_hostname}}.pub'
      flat: yes

  - name: Set authorized_kes on hosts
    authorized_key:
      user: root
      key: "{{lookup('file','{{item}}')}}"
      state: present
    with_fileglob:
      - 'public_keys/*.pub'

  - name: Add Kubernetes Yum repo
    yum_repository:
      name: kubernetes
      description: Kubernetes
      baseurl: http://yum.kubernetes.io/repos/kubernetes-el7-x86_64
      enabled: yes
      gpgcheck: yes
      repo_gpgcheck: yes
      gpgkey: |
         https://packages.cloud.google.com/yum/doc/yum-key.gpg 
         https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  - name: Yum install packages docker kubelet kubeadm kubectl kubernetes-cni
    yum:
      name={{item}}
      state=latest
    with_items:
      - docker
      - kubelet
      - kubeadm
      - kubectl
      - kubernetes-cni

  - name: Fix for kubelet 1.6 startup
    lineinfile:
      dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      regexp: '^Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=systemd"'
      insertbefore: '^ExecStart=/usr/bin/kubelet'
      state: present
      line: 'Environment="KUBELET_EXTRA_ARGS=--cgroup-driver=systemd"'

  - name: Enable Overlay FS
    lineinfile:
      dest: /etc/modules-load.d/overlay.conf
      regexp: '^overlay'
      insertafter: EOF
      line: overlay
      state: present
      create: yes

  - name: Edit the docker-storage-setup file
    lineinfile:
      dest: /etc/sysconfig/docker-storage-setup
      regexp: '^STORAGE_DRIVER="overlay"'
      insertafter: EOF
      line: 'STORAGE_DRIVER="overlay"'
      state: present
      create: yes


  - name: Start and enable docker and Kubelet
    systemd:
      daemon_reload=yes
      state=started
      enabled=yes
      name={{item}}
    with_items:
      - docker
      - kubelet

  - name: Copy kubernetes config to root directory
    command: cp -rf /etc/kubernetes/admin.conf ~/.kube/config

  - name: Reboot all hosts
    shell: nohup bash -c "sleep 2s && reboot" &
    async: 0
    poll: 0
    ignore_errors: true
    register: reboot

  - name: wait for servers restarts
    local_action: wait_for port=22 host="{{ ansible_ssh_host | default(inventory_hostname) }}" search_regex=OpenSSH delay=30
    when: reboot.changed
