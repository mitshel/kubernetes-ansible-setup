    - name: 5 minute paused
      pause:
        minutes: 5

    - name: kubeadm init
      command: kubeadm init
      args:
        creates: /var/lib/etcd

    - name: Creates destination directory for kube config
      file: state=directory mode=0700 dest=/root/.kube/

    - name: Copy kubernetes config to root directory
      command: cp -rf /etc/kubernetes/admin.conf ~/.kube/config
      args:
        creates: ~/.kube/config

    - name: wait for kubernetes started 
      wait_for: port={{kube_port}} host=127.0.0.1 delay=15 state=started timeout=600 connect_timeout=15

    - name: tainted master
      command: kubectl --kubeconfig /etc/kubernetes/admin.conf taint nodes --all node-role.kubernetes.io/master-
      args:
        creates: ~/taint
      ignore_errors: yes

    - name: install POD network
      command: kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f {{ kubeadm_network_addons_urls }}

    - name: get join token
      shell: kubeadm --kubeconfig /etc/kubernetes/admin.conf token list | grep -v TOKEN | awk '{print $1}'
      register: kubetoken

    - name: get master server and port
      shell: kubectl --kubeconfig /etc/kubernetes/admin.conf config view | grep 'server' | awk -F/ '{print $3}'
      register: mastersrv

    - name: debug show token
      debug: msg={{kubetoken.stdout}}

    - name: debug show master info
      debug: msg={{mastersrv.stdout}}

    - name: copy token adn server to tempfile
      lineinfile:
        dest: roles/master/files/mastersrv
        regexp: '^'
        insertafter: EOF
        line: '{{kubetoken.stdout}} {{mastersrv.stdout}}'
        state: present
        create: yes
      delegate_to: 127.0.0.1

    - name: activate batch/v2alpha1
      lineinfile:
        dest: /etc/kubernetes/manifests/kube-apiserver.yaml
        regexp: '    - --runtime-config=batch/v2alpha1=true'
        insertafter: '    - kube-apiserver'
        line: '    - --runtime-config=batch/v2alpha1=true'
        state: present
      tags:
        - v2alpha1
    
    - name: test Dashboard installations
      shell: kubectl  --kubeconfig /etc/kubernetes/admin.conf get svc --all-namespaces | grep dashboard | awk '{print $2}'
      register: dashboard

    - name: install Dashboard
      command: kubectl --kubeconfig /etc/kubernetes/admin.conf create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml
      when: dashboard.stdout!='kubernetes-dashboard'

    - name: test Weave Scope installations
      shell: kubectl  --kubeconfig /etc/kubernetes/admin.conf get svc --all-namespaces | grep weave-scope | awk '{print $2}'
      register: weavescope

    - name: install Weave Scope
      command: kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f 'https://cloud.weave.works/launch/k8s/weavescope.yaml'
      when: weavescope.stdout!='weave-scope-app'
